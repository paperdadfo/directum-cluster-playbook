---
- name: add debian stretch repo
  hosts: all  # где выполняется
  become: yes # это эскалация прав доступа, если не указан метод и юзер по дефолту юзается sudo

  tasks:
# вот тут если вынести это в роль, возникают непонятные ошибки,
# в связи с этим, пришлось вынести в отдельную таску
  - name: install debian-archive-keyring dirmngr
    apt: # используем модуль APT
      name: "debian-archive-keyring" # имя пакета который надо установить, если не указано другое действие
      update_cache: yes # обновить ли кэш пакетов
    loop: # повторить
      - dirmngr # так же будет установлен

  - name: add repo
    apt_repository: # модуль добавление репозитория
      repo: deb https://mirror.yandex.ru/debian/ stretch main contrib non-free # репозиторий

# то, что ниже, по сути установка остальных пакетов, необходимых так или иначе

  - name: install components
    apt:
      name: "sshpass"
      update_cache: yes
    loop:
    - ca-certificates
    - curl
    - software-properties-common
    - unzip

- name: install postgresql
  hosts: rx_db
  become: yes

  roles:

# тут используются роли, что происходит в ролях можно посмотреть в ./roles/%rolename%

    - role: postgresql-install
    - role: postgresql-config

  tasks:

# В: Почему не создана роль на создание пользователя?
# О: Роль с содержанием этой таске отрабатывается некоретно из за python 3.5 на астре
# п.с устанавливать Python версии выше 3.5 опять-же нельзя, возможны уже другие ошибки
  - name: install setfacl support
    become: yes
    apt: pkg=acl

  - name: Create User
    become_user: postgres
    postgresql_user:
     name: "{{ admnPostgres }}"
     password: "{{ PasswordPostgres }}"
     role_attr_flags: SUPERUSER,LOGIN

- name: install docker and create dir
  hosts: DRX
  become: yes

  roles:
    - role: docker-install

# ниже мы создаем директорию под data_protection сертификат

  tasks:

  - name: Create data_protection folder
    file:
      path: "{{ home_path }}/data_protection"
      state: directory

- name: Config Directum
  hosts: WEB_APP
  become: yes

  roles:
    - role: preparing-to-install

- name: up HaProxy Balancer
  hosts: balancer
  become: yes

  roles:
    - role: haproxy-install

- name: Up all Services
  hosts: services
  become: yes

  roles:
    - role: install-services
    - role: rabbitmq-install

- name: config storage server
  hosts: storage
  become: yes

  roles:
    - role: preparing-to-install-storage

- name: create and cp data_protection cert to nodes
  hosts: webapp1
  become: yes

  roles:

    - role: create-data-protection-cert

- name: Set Version from local builds
  hosts: DRX
  become: yes

  tasks:

  - name: Set Version from local builds
    shell: bash /home/build/do.sh set_version_from_local_builds

- name: up storage
  hosts: storage
  become: yes

  tasks:

  - name: up
    shell: bash /home/build/do.sh all up

- name: up-directum-services
  hosts: services
  become: yes

  roles:

  - role: up-directum-services

- name: Create clean db for DirectumRX
  hosts: webapp1
  become: yes

  tasks:

  - name: UP DB
    shell: bash /home/build/do.sh db up

- name: update storage info
  hosts: rx_db
  become: yes

  tasks:

# на данном этапе генерируется SQL скрипт из шаблона

  - name: generate SQL
    template:
      src: changestorage.sql.j2
      dest: "/home/{{ansible_user}}/changestorage.sql"
      mode: 0777

# тут скрипт выполняется для СУБД, тем самым меняя в БД адрес хранилища

  - name: UpdateStorage
    postgresql_query:
      db: DirectumRX
      login_host: "{{ groups['rx_db'][0] }}"
      port: 5432
      login_user: "{{ admnPostgres }}"
      login_password: "{{ PasswordPostgres }}"
      as_single_query: yes
      path_to_script: /home/{{ansible_user}}/changestorage.sql

- name: up Directum
  hosts: webapp1
  become: yes

  roles:

  - role: poehali

- name: start all nodes
  hosts: DRX
  become: yes

  tasks:

  - name: start nodes
    shell: bash /home/build/do.sh all up

...

